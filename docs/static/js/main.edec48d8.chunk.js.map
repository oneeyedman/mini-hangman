{"version":3,"sources":["index.js"],"names":["DEFAULTWORDS","getRandomWord","arr","max","total","length","Math","floor","random","HangMan","limit","result","this","props","tries","rope","className","isActive","React","Component","App","state","totalTries","word","hiddenWord","userKey","userHistory","gameOver","getUserKey","bind","startGame","split","map","letter","setState","event","key","currentTarget","value","toLowerCase","prevState","newHistory","newHiddenWord","includes","i","push","setTimeout","Fragment","item","index","type","onChange","onClick","emptyField","maxLength","ReactDOM","render","document","getElementById"],"mappings":"uPAIMA,G,MAAe,CACpB,OACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,SAQD,SAASC,EAAcC,GACtB,IALwBC,EAKlBC,EAAQF,EAAIG,OAElB,OAAOH,GAPiBC,EAMMC,EALvBE,KAAKC,MAAMD,KAAKE,SAAWL,K,IAS7BM,E,iLACIC,GAAQ,IAEZC,EAAS,GAKb,OANgBC,KAAKC,MAAdC,OAEOJ,IACbC,EAAS,yBAGHA,I,+BAGE,IAAD,EACcC,KAAKC,MAApBE,EADC,EACDA,KAAMD,EADL,EACKA,MACb,OACC,yBAAKE,UAAS,+BAA0BD,EAAO,qBAAqB,KAClEA,GAAQ,yBAAKC,UAAS,wBAAmBJ,KAAKK,SAAS,MACxD,yBAAKD,UAAS,wBAAmBJ,KAAKK,SAAS,KAC9C,yBAAKD,UAAS,wBAAmBJ,KAAKK,SAAS,KAC9C,yBAAKD,UAAS,wBAAoBF,EAAQ,EAAK,qBAAqB,OAErE,yBAAKE,UAAS,0CAAqCJ,KAAKK,SAAS,MACjE,yBAAKD,UAAS,2CAAsCJ,KAAKK,SAAS,Y,GArBjDC,IAAMC,WA4BtBC,E,YACL,WAAYP,GAAQ,IAAD,8BAClB,4CAAMA,KACDQ,MAAQ,CACZC,WAAY,EACZR,MAAO,EACPS,KAAM,GACNC,WAAY,GACZC,QAAS,GACTC,YAAa,GACbC,UAAU,GAEX,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAXA,E,iFAelBjB,KAAKkB,c,kCAIL,IAAMP,EAAOtB,EAAcD,GAAc+B,MAAM,IACzCP,EAAaD,EAAKS,IAAI,SAAAC,GAAM,MAAI,KACtCrB,KAAKsB,SAAS,CACbX,KAAMA,EACNC,WAAYA,M,iCAIHW,GAAQ,IAAD,OACXC,EAAMD,EAAME,cAAcC,MAAMC,cAClCH,GACHxB,KAAKsB,SAAS,SAAAM,GAAc,IACpBhB,EAA6CgB,EAA7ChB,WAAYE,EAAiCc,EAAjCd,YAAaH,EAAoBiB,EAApBjB,KAAMD,EAAckB,EAAdlB,WACjCR,EAAmB0B,EAAnB1B,MAAOa,EAAYa,EAAZb,SACNc,EAAU,YAAOf,GACjBgB,EAAa,YAAOlB,GAC1B,GAAID,EAAKoB,SAASP,GACjB,IAAK,IAAIQ,EAAE,EAAEA,EAAErB,EAAKlB,OAAOuC,IACtBrB,EAAKqB,KAAOR,IACfM,EAAcE,GAAKR,QAIjBtB,EAAQQ,KACXR,IACcQ,IACbK,GAAW,GAMd,OADAc,EAAWI,KAAKT,GACT,CACNtB,MAAOA,EACPU,WAAYkB,EACZjB,QAASW,EACTV,YAAae,EACbd,SAAUA,IAET,WACFmB,WAAW,WACV,EAAKZ,SAAS,CACbT,QAAS,MAER,S,iCAKKU,GACVA,EAAME,cAAcC,MAAQ,K,+BAGnB,IAAD,EACiB1B,KAAKS,MAAvBP,EADC,EACDA,MAAOW,EADN,EACMA,QACd,OACC,kBAAC,IAAMsB,SAAP,KACC,kBAACtC,EAAD,CAASM,MAAM,EAAMD,MAAOA,IAC5B,yBAAKE,UAAU,WACd,yBAAKA,UAAU,aACbJ,KAAKS,MAAMG,WAAWQ,IAAI,SAACgB,EAAMC,GACjC,OACC,yBAAKb,IAAKa,EAAOjC,UAAS,sBAAkBgC,EAAQ,kBAAkB,KACpEA,MAKL,yBAAKhC,UAAU,aACd,yBAAKA,UAAU,mBACd,2BAAOA,UAAU,mBAAmBkC,KAAK,OAAOC,SAAUvC,KAAKgB,WAAYwB,QAASxC,KAAKyC,WAAYC,UAAU,IAAIhB,MAAOb,Y,GA1F/GP,IAAMC,WAmGxBoC,IAASC,OAAO,kBAACpC,EAAD,MAASqC,SAASC,eAAe,U","file":"static/js/main.edec48d8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nconst DEFAULTWORDS = [\n\t\"rule\",\n\t\"left\",\n\t\"css\",\n\t\"and\",\n\t\"comb\",\n\t\"this\",\n\t\"get\",\n\t\"html\",\n\t\"api\",\n\t\"from\"\n];\n//const ENDPOINT = 'https://api.rand.fun/text/word';\n\nfunction getRandomNumber(max) {\n\treturn Math.floor(Math.random() * max);\n}\n\nfunction getRandomWord(arr) {\n\tconst total = arr.length;\n\tconst index = getRandomNumber(total);\n\treturn arr[index];\n}\n\nclass HangMan extends React.Component {\n\tisActive(limit) {\n\t\tconst {tries} = this.props;\n\t\tlet result = '';\n\t\tif ( tries >= limit ) {\n\t\t\tresult = 'hangman__part--active';\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trender() {\n\t\tconst {rope, tries} = this.props;\n\t\treturn (\n\t\t\t<div className={`app__hangman hangman ${rope ? 'hangman--with-rope':''}`}>\n\t\t\t\t{rope && <div className={`hangman__rope ${this.isActive(1)}`}></div>}\n\t\t\t\t<div className={`hangman__body ${this.isActive(2)}`}>\n\t\t\t\t\t<div className={`hangman__head ${this.isActive(2)}`}>\n\t\t\t\t\t\t<div className={`hangman__face ${(tries > 0) ? 'hangman__face--sad':''}`}></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`hangman__leg hangman__leg--left ${this.isActive(3)}`}></div>\n\t\t\t\t\t<div className={`hangman__leg hangman__leg--right ${this.isActive(4)}`}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttotalTries: 4,\n\t\t\ttries: 0,\n\t\t\tword: [],\n\t\t\thiddenWord: [],\n\t\t\tuserKey: '',\n\t\t\tuserHistory: [],\n\t\t\tgameOver: false\n\t\t};\n\t\tthis.getUserKey = this.getUserKey.bind(this);\n\t}\n\t\n  componentDidMount() {\n\t\tthis.startGame();\n\t}\n\n\tstartGame() {\n\t\tconst word = getRandomWord(DEFAULTWORDS).split(\"\");\n\t\tconst hiddenWord = word.map(letter => '');\n\t\tthis.setState({\n\t\t\tword: word,\n\t\t\thiddenWord: hiddenWord\n\t\t});\n\t}\n\n\tgetUserKey(event) {\n\t\tconst key = event.currentTarget.value.toLowerCase();\n\t\tif (key) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\tconst {hiddenWord, userHistory, word, totalTries} = prevState;\n\t\t\t\tlet {tries, gameOver} = prevState;\n\t\t\t\tconst newHistory = [...userHistory];\n\t\t\t\tconst newHiddenWord = [...hiddenWord]\n\t\t\t\tif (word.includes(key)) {\n\t\t\t\t\tfor (let i=0;i<word.length;i++) {\n\t\t\t\t\t\tif (word[i] === key) {\n\t\t\t\t\t\t\tnewHiddenWord[i] = key;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (tries < totalTries) {\n\t\t\t\t\t\ttries++;\n\t\t\t\t\t\tif (tries === totalTries) {\n\t\t\t\t\t\t\tgameOver = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tnewHistory.push(key);\n\t\t\t\treturn {\n\t\t\t\t\ttries: tries,\n\t\t\t\t\thiddenWord: newHiddenWord,\n\t\t\t\t\tuserKey: key,\n\t\t\t\t\tuserHistory: newHistory,\n\t\t\t\t\tgameOver: gameOver\n\t\t\t\t}\n\t\t\t}, ()=>{\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuserKey: ''\n\t\t\t\t\t});\n\t\t\t\t}, 500);\n\t\t\t});\n\t\t}\n\t}\n\n\temptyField(event) {\n\t\tevent.currentTarget.value = '';\n\t}\n\n\trender() {\n\t\tconst {tries, userKey} = this.state;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<HangMan rope={true} tries={tries} />\n\t\t\t\t<div className=\"app__ui\">\n\t\t\t\t\t<div className=\"app__word\">\n\t\t\t\t\t\t{this.state.hiddenWord.map((item, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={index} className={`app__letter ${(item) ? 'app__letter--ok':''}`}>\n\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"app__user\">\n\t\t\t\t\t\t<div className=\"app__user-field\">\n\t\t\t\t\t\t\t<input className=\"app__user-letter\" type=\"text\" onChange={this.getUserKey} onClick={this.emptyField} maxLength=\"1\" value={userKey}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById(\"area\"));\n\n"],"sourceRoot":""}